/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { RequestListRelationFilter } from "../../request/base/RequestListRelationFilter";
import { ReservationQueueListRelationFilter } from "../../reservationQueue/base/ReservationQueueListRelationFilter";
import { StorekeeperWhereUniqueInput } from "../../storekeeper/base/StorekeeperWhereUniqueInput";

@InputType()
class InventoryWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  itemName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  quantity?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RequestListRelationFilter)
  @IsOptional()
  @Field(() => RequestListRelationFilter, {
    nullable: true,
  })
  requests?: RequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReservationQueueListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReservationQueueListRelationFilter)
  @IsOptional()
  @Field(() => ReservationQueueListRelationFilter, {
    nullable: true,
  })
  reservationQueues?: ReservationQueueListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StorekeeperWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StorekeeperWhereUniqueInput)
  @IsOptional()
  @Field(() => StorekeeperWhereUniqueInput, {
    nullable: true,
  })
  storekeeper?: StorekeeperWhereUniqueInput;
}

export { InventoryWhereInput as InventoryWhereInput };

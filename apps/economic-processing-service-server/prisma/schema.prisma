datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Request {
  createdAt   DateTime           @default(now())
  employee    Employee?          @relation(fields: [employeeId], references: [id])
  employeeId  String?
  id          String             @id @default(cuid())
  inventory   Inventory?         @relation(fields: [inventoryId], references: [id])
  inventoryId String?
  quantity    Int?
  status      EnumRequestStatus?
  updatedAt   DateTime           @updatedAt
}

model Storekeeper {
  createdAt   DateTime    @default(now())
  email       String?
  id          String      @id @default(cuid())
  inventories Inventory[]
  name        String?
  updatedAt   DateTime    @updatedAt
}

model Inventory {
  createdAt         DateTime           @default(now())
  id                String             @id @default(cuid())
  itemName          String?
  quantity          Int?
  requests          Request[]
  reservationQueues ReservationQueue[]
  storekeeper       Storekeeper?       @relation(fields: [storekeeperId], references: [id])
  storekeeperId     String?
  updatedAt         DateTime           @updatedAt
}

model Employee {
  createdAt         DateTime           @default(now())
  email             String?
  id                String             @id @default(cuid())
  name              String?
  requests          Request[]
  reservationQueues ReservationQueue[]
  updatedAt         DateTime           @updatedAt
}

model ReservationQueue {
  createdAt   DateTime                    @default(now())
  employee    Employee?                   @relation(fields: [employeeId], references: [id])
  employeeId  String?
  id          String                      @id @default(cuid())
  inventory   Inventory?                  @relation(fields: [inventoryId], references: [id])
  inventoryId String?
  quantity    Int?
  status      EnumReservationQueueStatus?
  updatedAt   DateTime                    @updatedAt
}

enum EnumRequestStatus {
  Option1
}

enum EnumReservationQueueStatus {
  Option1
}
